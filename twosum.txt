class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        for (int i = 0; i < nums.length; i++) { 
            for (int j = 1; j < nums.length; j++) {
                if (i !=j && nums [i] + nums [j] == target) {
                    int [] result = {i,j};
                    
                    return result;
                    
                }                    
                }
            }
        
        
        return new int[]{0,0};
       
        
        
    }
   
}

Thought Process: I want to essentially check every possible unique combination of i and j are possible such that I can find a combination where both integers add up to the sum
Walkthrough: start by initializing a nested for loop such that i starts at 0, and j starts at 1, and iterates the combination 0,1 ; 0,2 ; 0,3 ,, etc. then repeat by increasing i and j until a two sum approach is reached. If there does not exist a two sum i simply return [0,0]